<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1">
    <title>All Orders</title>
    <link rel="stylesheet" type="text/css" href="./assets/css/mechanic.css" />
    <link rel="stylesheet"
        href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css">
</head>

<body>
    <input type="checkbox" id="menu-toggle">
    <div class="sidebar">
        <div class="side-header">
            <h3>A<span>ll Orders</span></h3>
        </div>
        <div class="side-content">
            <div class="side-menu">
                <ul>
                    <li>
                        <a href="/mechanic" class="active">
                            <span class="las la-home"></span>
                            <small>Dashboard</small>
                        </a>
                    </li>
                    <li>
                        <a href="">
                            <span class="las la-user-alt"></span>
                            <small>Profile</small>
                        </a>
                    </li>

                    <li>
                        <a href="">
                            <span class="las la-clipboard-list"></span>
                            <small>Projects</small>
                        </a>
                    </li>
                    <li>
                        <a href="">
                            <span class="las la-tasks"></span>
                            <small>Tasks</small>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <main>
        <div class="page-content">
            <div class="analytics">
                <div class="card">
                    <div class="card-head">
                        <h2>275</h2>
                        <span class="las la-user-friends"></span>
                    </div>
                    <div class="card-progress">
                        <small>Total Orders</small>
                        <div class="card-indicator">
                            <div class="indicator one" style="width: 60%"></div>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-head">
                        <h2>23</h2>
                        <span class="las la-eye"></span>
                    </div>
                    <div class="card-progress">
                        <small>Pending Orders</small>
                        <div class="card-indicator">
                            <div class="indicator two" style="width: 80%"></div>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-head">
                        <h2>$2000</h2>
                        <span class="las la-shopping-cart"></span>
                    </div>
                    <div class="card-progress">
                        <small>Monthly revenue</small>
                        <div class="card-indicator">
                            <div class="indicator three" style="width: 65%"></div>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-head">
                        <h2>400</h2>
                        <span class="las la-envelope"></span>
                    </div>
                    <div class="card-progress">
                        <small>Reviews</small>
                        <div class="card-indicator">
                            <div class="indicator four" style="width: 90%"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="records table-responsive">

                <div class="browse">
                    <input type="search" placeholder="Search" class="record-search">
                    <select name="status-filter" id="status-filter">
                        <option value="">Status</option>
                        <option value="Requested">Pending</option>
                        <option value="accepted">Accepted</option>
                        <option value="paid">Paid</option>
                        <option value="offered">Offered</option>
                        <option value="rejected">Rejected</option>
                    </select>
                </div>
            </div>

            <div>
                <table width="100%">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th><span class="las la-sort"></span> Name</th>
                            <th><span class="las la-sort"></span> Mobile</th>
                            <th><span class="las la-sort"></span> Date</th>
                            <th><span class="las la-sort"></span> Time</th>
                            <th><span class="las la-sort"></span> Status</th>
                            <th><span class="las la-sort"></span> ACTIONS</th>
                        </tr>
                    </thead>
                    <tbody id="record-table-body">
                        <!-- Rows will be dynamically inserted here -->
                    </tbody>
                </table>
            </div>
        </div>
        </div>
    </main>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/js-cookie/3.0.1/js.cookie.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jwt-decode/3.1.2/jwt-decode.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            fetchCookie().then((loggedInUserMobile) => {
                console.log(loggedInUserMobile, " ");
                if (loggedInUserMobile) {
                    fetchRecordData(loggedInUserMobile);
                }
            });
        });

        async function fetchCookie() {
            try {
                const response = await fetch("/getcookie");
                const data = await response.json();
                if (data && Object.keys(data).length !== 0) {
                    const jwt = data.jwt;
                    const decoded = parseJwt(jwt);
                    if (decoded && decoded.mobile) {
                        return decoded.mobile.toString();
                    } else {
                        return null;
                    }
                }
            } catch (error) {
                console.error("Error fetching cookie:", error);
            }
            return null;
        }

        function parseJwt(token) {
            const base64Url = token.split(".")[1];
            const base64 = base64Url.replace(/-/g, "+").replace(/_/g, "/");
            const jsonPayload = decodeURIComponent(
                atob(base64)
                    .split("")
                    .map((c) => "%" + ("00" + c.charCodeAt(0).toString(16)).slice(-2))
                    .join("")
            );
            return JSON.parse(jsonPayload);
        }

        async function fetchRecordData(loggedInUserMobile) {
            try {
                const response = await fetch(`/All-Assigned-orders?mobile=${loggedInUserMobile}`);
                if (!response.ok) {
                    throw new Error(`An error occurred: ${response.statusText}`);
                }
                const data = await response.json();
                updateTable(data);

                const statusFilter = document.getElementById('status-filter');
                statusFilter.addEventListener('change', () => {
                    const selectedStatus = statusFilter.value;
                    const filteredData = selectedStatus ? data.filter(record => record.status.toLowerCase() === selectedStatus.toLowerCase()) : data;
                    updateTable(filteredData);
                });
            } catch (error) {
                console.error('Error fetching record data:', error);
            }
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            const formattedDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
            return formattedDate;
        }

        function updateTable(data) {
            const tableBody = document.getElementById('record-table-body');
            tableBody.innerHTML = '';
            data.forEach((record, index) => {
                const row = document.createElement('tr');
                row.setAttribute('data-id', record._id);
                row.innerHTML = `
                    <td>${index + 1}</td>
                    <td>${record.name}</td>
                    <td>${record.mobile}</td>
                    <td>${formatDate(record.service_date)}</td>
                    <td>${record.service_time}</td>
                    <td>${record.status}</td>
                    <td>
                        <div class="actions">
                            <span class="lab la-telegram-plane"></span>
                            <span class="las la-eye"></span>
                            <span class="las la-ellipsis-v"></span>
                        </div>
                    </td>
                `;
                row.addEventListener('click', () => {
                    const orderId = row.getAttribute('data-id');
                    window.location.href = `mechanic_userOrder?order_id=${orderId}`;
                });
                tableBody.appendChild(row);
            });
        }
    </script>
</body>

</html>