<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Ragilly Technologies - User Details</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />

  <!-- Favicon -->
  <link rel="shortcut icon" href="./favicon.svg" type="image/svg+xml" />

  <!-- Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Chakra+Petch:wght@400;600;700&family=Mulish&display=swap"
    rel="stylesheet" />

  <!-- Material Icons -->
  <link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@40,600,0,0" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

  <link rel="stylesheet" href="./assets/css/profile.css" />
  <link rel="stylesheet" href="./assets/css/style.css" />
</head>

<body style="font-weight: bold; color: black">
  <!-- Header -->
  <header class="header">
    <div class="container">
      <a href="/dashboard" class="logo">
        <img src="./assets/images/ragilly-logo.png" width="128" height="63" alt="Ragilly home" />
      </a>
      <nav class="navbar" data-navbar>
        <ul class="navbar-list">
          <li><a href="#" class="navbar-link">About</a></li>
          <li><a href="#" class="navbar-link">Menu</a></li>
          <li><a href="/orderdetail" class="navbar-link">Order</a></li>
          <li>
            <button id="logout"><a class="navbar-link">Logout</a></button>
          </li>
        </ul>
      </nav>
      <button class="nav-toggle-btn" aria-label="toggle menu" data-nav-toggler>
        <span class="nav-toggle-icon icon-1"></span>
        <span class="nav-toggle-icon icon-2"></span>
        <span class="nav-toggle-icon icon-3"></span>
      </button>
    </div>
  </header>

  <!-- Main content -->
  <div class="container">
    <div id="profile" class="profile">
      <div class="profile-image"></div>
      <div class="profile-details">
        <h2><strong id="UserName"></strong></h2>
        <p id="Mobile"></p>
        <p id="Location"></p>
      </div>
      <div class="current-order">
        <div style="display: flex; justify-content: center">
          <strong id="currentOrderName" style="margin-right: 1rem"></strong>
          <span id="currentOrdermodle"></span>
        </div>
        <div style="display: flex; justify-content: space-between">
          <div style="display: flex; flex-direction: column">
            <strong>Order Id:</strong>
            <p id="currentOrderId"></p>
            <strong>Order Time:</strong>
            <p id="currentOrderTime"></p>
          </div>
          <div>
            <span id="currentOrderStatus" class="status pending"></span>
          </div>
        </div>
      </div>
      <div class="edit-button">
        <i class="material-icons">edit</i>
      </div>
    </div>
    <div class="orders">
      <h2 style="text-align: center; font-size: x-large; font-weight: bold">
        All Orders
      </h2>
      <div id="userDetails" class="order"></div>
    </div>
  </div>

  <!-- Footer -->
  <footer class="footer">
    <div class="footer-top section">
      <div class="container">
        <div class="footer-brand">
          <a href="#" class="logo">
            <img src="./assets/images/ragilly-logo.png" width="128" height="63" alt="Ragilly home" />
          </a>
          <p class="footer-text">
            Rerum necessitatibus saepe eveniet aut et voluptates repudiandae
            sint et molestiae non recusandae.
          </p>
          <ul class="social-list">
            <li>
              <a href="#" class="social-link"><img src="./assets/images/facebook.svg" alt="facebook" /></a>
            </li>
            <li>
              <a href="#" class="social-link"><img src="./assets/images/instagram.svg" alt="instagram" /></a>
            </li>
            <li>
              <a href="#" class="social-link"><img src="./assets/images/twitter.svg" alt="twitter" /></a>
            </li>
          </ul>
        </div>
        <ul class="footer-list">
          <li>
            <p class="h3">Opening Hours</p>
          </li>
          <li>
            <p class="p">Monday – Saturday</p>
            <span class="span">12.00 – 14.45</span>
          </li>
          <li>
            <p class="p">Sunday – Thursday</p>
            <span class="span">17.30 – 00.00</span>
          </li>
          <li>
            <p class="p">Friday – Saturday</p>
            <span class="span">12.00 – 14.45</span>
          </li>
        </ul>
        <ul class="footer-list">
          <li>
            <p class="h3">Contact Info</p>
          </li>
          <li>
            <a href="tel:+01234567890" class="footer-link"><span class="material-symbols-rounded">call</span><span
                class="span">+01 2 3456 7890</span></a>
          </li>
          <li>
            <a href="mailto:info@ragilly.com" class="footer-link"><span
                class="material-symbols-rounded">mail</span><span class="span">info@Ragilly.com</span></a>
          </li>
          <li>
            <address class="footer-link address">
              <span class="material-symbols-rounded">location_on</span><span class="span">21 King Street Melbourne,
                3000, Australia</span>
            </address>
          </li>
        </ul>
      </div>
      <img src="./assets/images/footer-shape-3.png" width="637" height="173" loading="lazy" alt="Shape"
        class="shape shape-3 move-anim" />
    </div>
    <div class="footer-bottom">
      <div class="container">
        <p class="copyright">Copyright 2024, Ragilly All Rights Reserved.</p>
        <img src="./assets/images/footer-shape-2.png" width="778" height="335" loading="lazy" alt="Shape"
          class="shape shape-2" />
        <img src="./assets/images/footer-shape-1.png" width="805" height="652" loading="lazy" alt="Red Car"
          class="shape shape-1 move-anim" />
      </div>
    </div>
  </footer>

  <!-- JavaScript -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/js-cookie/3.0.1/js.cookie.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jwt-decode/3.1.2/jwt-decode.min.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      fetchCookie().then((loggedInUserMobile) => {
        if (loggedInUserMobile) {
          fetchUserDetails(loggedInUserMobile);
          fetchCurrentOrder(loggedInUserMobile);
          fetchAllOrders(loggedInUserMobile);
        }
      });
    });

    async function fetchCookie() {
      try {
        const response = await fetch("/getcookie");
        const data = await response.json();
        if (data && Object.keys(data).length !== 0) {
          return parseJwt(data.jwt).mobile;
        }
      } catch (error) {
        console.error("Error fetching cookie:", error);
      }
      return null;
    }

    function parseJwt(token) {
      const base64Url = token.split(".")[1];
      const base64 = base64Url.replace(/-/g, "+").replace(/_/g, "/");
      const jsonPayload = decodeURIComponent(
        atob(base64)
          .split("")
          .map((c) => "%" + ("00" + c.charCodeAt(0).toString(16)).slice(-2))
          .join("")
      );
      return JSON.parse(jsonPayload);
    }

    function fetchUserDetails(mobile) {
      fetch(`/userdetails?mobile=${mobile}`)
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
          return response.json();
        })
        .then((data) => {
          if (!data || data.length === 0) {
            alert("User not found");
            return;
          }
          renderUserDetails(data);
        })
        .catch((error) => {
          console.error("Error:", error);
          alert("User not found");
        });
    }

    function fetchUserDetailsForEdit(mobile) {
      fetch(`/userdetails?mobile=${mobile}`)
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
          return response.json();
        })
        .then((data) => {
          if (!data || data.length === 0) {
            alert("User not found");
            return;
          }
          renderEditableUserDetails(data[0]);
        })
        .catch((error) => {
          console.error("Error:", error);
          alert("User not found");
        });
    }

    function fetchCurrentOrder(mobile) {
      fetch(`/currentorder?mobile=${mobile}`)
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
          return response.json();
        })
        .then((data) => {
          if (!data) {
            alert("Current order not found");
            return;
          }
          renderCurrentOrder(data);
        })
        .catch((error) => {
          console.error("Error:", error);
          alert("Current order not found");
        });
    }

    function fetchAllOrders(mobile) {
      fetch(`/orderdetails?mobile=${mobile}`)
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
          return response.json();
        })
        .then((data) => {
          if (!data || data.length === 0) {
            alert("No orders found");
            return;
          }
          renderAllOrders(data);
        })
        .catch((error) => {
          console.error("Error:", error);
        });
    }

    function renderUserDetails(userData) {
      const user = userData[0];
      document.getElementById("UserName").textContent = user.name;
      document.getElementById("Mobile").textContent = user.mobile;
      document.getElementById("Location").textContent = user.email;

      const orderContainer = document.getElementById("userDetails");
      orderContainer.innerHTML = "";
    }

    function renderCurrentOrder(order) {
      document.getElementById("currentOrderName").textContent = order.vehicle_brand;
      document.getElementById("currentOrdermodle").textContent = order.vehicle_model;
      document.getElementById("currentOrderId").textContent = order._id;
      document.getElementById("currentOrderTime").textContent = order.service_time;
      document.getElementById("currentOrderStatus").textContent = order.status;
      document.getElementById("currentOrderStatus").classList.add(order.status.toLowerCase());
    }

    function renderAllOrders(orders) {
      const orderContainer = document.getElementById("userDetails");
      orderContainer.innerHTML = "";

      if (orders && orders.length > 0) {
        orders.forEach((order) => {
          const orderElement = document.createElement("div");
          orderElement.classList.add("order");
          orderElement.innerHTML = `
        <div style="display: flex; justify-content: space-between;">
          <div style="display: flex; flex-direction: column;">
            <h3><strong>Order Name:</strong> ${toCapitalizedWords(order.vehicle_brand)} ${toCapitalizedWords(order.vehicle_model)}</h3>
            <p><strong>Order ID:</strong> ${order._id}</p>
            <p><strong>Order Time:</strong> ${order.service_time}</p>
          </div>
          <div>
            <span class="status ${order.status.toLowerCase()}">${order.status}</span>
          </div>
        </div>
      `;
          orderElement.addEventListener("click", function () {
            window.location.href = "/orderdetail";
          })

          orderContainer.appendChild(orderElement);
        });
      } else {
        const noOrdersElement = document.createElement("p");
        noOrdersElement.textContent = "No orders found.";
        orderContainer.appendChild(noOrdersElement);
      }
    }

    function toCapitalizedWords(str) {
      return str.replace(/\b\w/g, char => char.toUpperCase());
    }

    function renderEditableUserDetails(userData) {
      const userDetailsContainer = document.getElementById("userDetails");
      userDetailsContainer.innerHTML = "";

      const form = document.createElement("form");
      form.id = "editUserForm";
      form.classList.add("my-4"); // Adding margin at the top for spacing

      // Define the fields you want to display and edit
      const allowedFields = ["name", "email", "mobile"];

      allowedFields.forEach((key) => {
        if (userData[key] !== undefined) {
          const inputField = document.createElement("input");
          inputField.type = "text";
          inputField.name = key;
          inputField.value = userData[key];
          inputField.classList.add("form-control"); // Bootstrap class for input styling
          const label = document.createElement("label");
          label.textContent = key.charAt(0).toUpperCase() + key.slice(1);
          label.classList.add("font-weight-bold"); // Bootstrap class for label styling

          const fieldDiv = document.createElement("div");
          fieldDiv.classList.add("form-group");
          fieldDiv.appendChild(label);
          fieldDiv.appendChild(inputField);

          form.appendChild(fieldDiv);
        }
      });

      const submitButton = document.createElement("button");
      submitButton.type = "submit";
      submitButton.textContent = "Save Changes";
      submitButton.classList.add("btn", "btn-primary", "mt-3"); // Bootstrap classes for button styling

      form.appendChild(submitButton);

      userDetailsContainer.appendChild(form);

      form.addEventListener("submit", function (event) {
        event.preventDefault();
        const formData = new FormData(form);
        const editedUserData = {};
        formData.forEach((value, key) => {
          editedUserData[key] = value;
        });

        fetch("/edituser", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(editedUserData),
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
            return response.json();
          })
          .then((data) => {
            // Fetch updated user details and orders
            fetchUserDetails(editedUserData.mobile);
            fetchCurrentOrder(editedUserData.mobile);
            fetchAllOrders(editedUserData.mobile);
          })
          .catch((error) => {
            console.error("Error:", error);
            alert("An error occurred while saving changes");
          });
      });
    }

    // Event listener for edit button
    const editIcon = document.querySelector(".edit-button i.material-icons");
    editIcon.addEventListener("click", function () {
      // Fetch the user details again and then render editable details
      fetchCookie().then((loggedInUserMobile) => {
        if (loggedInUserMobile) {
          fetchUserDetailsForEdit(loggedInUserMobile);
        }
      });
    });

    document.getElementById('logout').addEventListener('click', () => {
      logOutUser();
    })

    async function logOutUser() {
      try {
        const response = await fetch('/logout', {
          method: 'POST',
          header: {
            'content-type': 'application/json'
          }
        })
        if (!response.ok) {
          throw new Error(`An error occurred: ${response.statusText}`)
        }

        document.cookie = 'jwt=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';

        window.location.href = '/';
      } catch (error) {
        console.error('Error logging Out:', error);
      }
    }
  </script>
</body>

</html>